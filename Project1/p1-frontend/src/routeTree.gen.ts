/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as AuthImport } from './routes/_auth'
import { Route as ProtectedAdminImport } from './routes/_protected/_admin'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const ProtectedUserReimbursementListLazyImport = createFileRoute(
  '/_protected/user/reimbursement-list',
)()
const ProtectedUserEditReimbursementLazyImport = createFileRoute(
  '/_protected/user/edit-reimbursement',
)()
const ProtectedUserCreateReimbursementLazyImport = createFileRoute(
  '/_protected/user/create-reimbursement',
)()
const AuthAuthRegisterLazyImport = createFileRoute('/_auth/auth/register')()
const AuthAuthLoginLazyImport = createFileRoute('/_auth/auth/login')()
const ProtectedAdminAdminUsersListLazyImport = createFileRoute(
  '/_protected/_admin/admin/users-list',
)()
const ProtectedAdminAdminReimbursementListLazyImport = createFileRoute(
  '/_protected/_admin/admin/reimbursement-list',
)()
const ProtectedAdminAdminReimbursementListResolvedLazyImport = createFileRoute(
  '/_protected/_admin/admin/reimbursement-list/resolved',
)()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProtectedAdminRoute = ProtectedAdminImport.update({
  id: '/_admin',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedUserReimbursementListLazyRoute =
  ProtectedUserReimbursementListLazyImport.update({
    id: '/user/reimbursement-list',
    path: '/user/reimbursement-list',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/user/reimbursement-list.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedUserEditReimbursementLazyRoute =
  ProtectedUserEditReimbursementLazyImport.update({
    id: '/user/edit-reimbursement',
    path: '/user/edit-reimbursement',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/user/edit-reimbursement.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedUserCreateReimbursementLazyRoute =
  ProtectedUserCreateReimbursementLazyImport.update({
    id: '/user/create-reimbursement',
    path: '/user/create-reimbursement',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/user/create-reimbursement.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthAuthRegisterLazyRoute = AuthAuthRegisterLazyImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/auth/register.lazy').then((d) => d.Route),
)

const AuthAuthLoginLazyRoute = AuthAuthLoginLazyImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/auth/login.lazy').then((d) => d.Route),
)

const ProtectedAdminAdminUsersListLazyRoute =
  ProtectedAdminAdminUsersListLazyImport.update({
    id: '/admin/users-list',
    path: '/admin/users-list',
    getParentRoute: () => ProtectedAdminRoute,
  } as any).lazy(() =>
    import('./routes/_protected/_admin/admin/users-list.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedAdminAdminReimbursementListLazyRoute =
  ProtectedAdminAdminReimbursementListLazyImport.update({
    id: '/admin/reimbursement-list',
    path: '/admin/reimbursement-list',
    getParentRoute: () => ProtectedAdminRoute,
  } as any).lazy(() =>
    import('./routes/_protected/_admin/admin/reimbursement-list.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedAdminAdminReimbursementListResolvedLazyRoute =
  ProtectedAdminAdminReimbursementListResolvedLazyImport.update({
    id: '/resolved',
    path: '/resolved',
    getParentRoute: () => ProtectedAdminAdminReimbursementListLazyRoute,
  } as any).lazy(() =>
    import(
      './routes/_protected/_admin/admin/reimbursement-list/resolved.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_protected/_admin': {
      id: '/_protected/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedAdminImport
      parentRoute: typeof ProtectedImport
    }
    '/_auth/auth/login': {
      id: '/_auth/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/auth/register': {
      id: '/_auth/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterLazyImport
      parentRoute: typeof AuthImport
    }
    '/_protected/user/create-reimbursement': {
      id: '/_protected/user/create-reimbursement'
      path: '/user/create-reimbursement'
      fullPath: '/user/create-reimbursement'
      preLoaderRoute: typeof ProtectedUserCreateReimbursementLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/user/edit-reimbursement': {
      id: '/_protected/user/edit-reimbursement'
      path: '/user/edit-reimbursement'
      fullPath: '/user/edit-reimbursement'
      preLoaderRoute: typeof ProtectedUserEditReimbursementLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/user/reimbursement-list': {
      id: '/_protected/user/reimbursement-list'
      path: '/user/reimbursement-list'
      fullPath: '/user/reimbursement-list'
      preLoaderRoute: typeof ProtectedUserReimbursementListLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/_admin/admin/reimbursement-list': {
      id: '/_protected/_admin/admin/reimbursement-list'
      path: '/admin/reimbursement-list'
      fullPath: '/admin/reimbursement-list'
      preLoaderRoute: typeof ProtectedAdminAdminReimbursementListLazyImport
      parentRoute: typeof ProtectedAdminImport
    }
    '/_protected/_admin/admin/users-list': {
      id: '/_protected/_admin/admin/users-list'
      path: '/admin/users-list'
      fullPath: '/admin/users-list'
      preLoaderRoute: typeof ProtectedAdminAdminUsersListLazyImport
      parentRoute: typeof ProtectedAdminImport
    }
    '/_protected/_admin/admin/reimbursement-list/resolved': {
      id: '/_protected/_admin/admin/reimbursement-list/resolved'
      path: '/resolved'
      fullPath: '/admin/reimbursement-list/resolved'
      preLoaderRoute: typeof ProtectedAdminAdminReimbursementListResolvedLazyImport
      parentRoute: typeof ProtectedAdminAdminReimbursementListLazyImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthLoginLazyRoute: typeof AuthAuthLoginLazyRoute
  AuthAuthRegisterLazyRoute: typeof AuthAuthRegisterLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLoginLazyRoute: AuthAuthLoginLazyRoute,
  AuthAuthRegisterLazyRoute: AuthAuthRegisterLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedAdminAdminReimbursementListLazyRouteChildren {
  ProtectedAdminAdminReimbursementListResolvedLazyRoute: typeof ProtectedAdminAdminReimbursementListResolvedLazyRoute
}

const ProtectedAdminAdminReimbursementListLazyRouteChildren: ProtectedAdminAdminReimbursementListLazyRouteChildren =
  {
    ProtectedAdminAdminReimbursementListResolvedLazyRoute:
      ProtectedAdminAdminReimbursementListResolvedLazyRoute,
  }

const ProtectedAdminAdminReimbursementListLazyRouteWithChildren =
  ProtectedAdminAdminReimbursementListLazyRoute._addFileChildren(
    ProtectedAdminAdminReimbursementListLazyRouteChildren,
  )

interface ProtectedAdminRouteChildren {
  ProtectedAdminAdminReimbursementListLazyRoute: typeof ProtectedAdminAdminReimbursementListLazyRouteWithChildren
  ProtectedAdminAdminUsersListLazyRoute: typeof ProtectedAdminAdminUsersListLazyRoute
}

const ProtectedAdminRouteChildren: ProtectedAdminRouteChildren = {
  ProtectedAdminAdminReimbursementListLazyRoute:
    ProtectedAdminAdminReimbursementListLazyRouteWithChildren,
  ProtectedAdminAdminUsersListLazyRoute: ProtectedAdminAdminUsersListLazyRoute,
}

const ProtectedAdminRouteWithChildren = ProtectedAdminRoute._addFileChildren(
  ProtectedAdminRouteChildren,
)

interface ProtectedRouteChildren {
  ProtectedAdminRoute: typeof ProtectedAdminRouteWithChildren
  ProtectedUserCreateReimbursementLazyRoute: typeof ProtectedUserCreateReimbursementLazyRoute
  ProtectedUserEditReimbursementLazyRoute: typeof ProtectedUserEditReimbursementLazyRoute
  ProtectedUserReimbursementListLazyRoute: typeof ProtectedUserReimbursementListLazyRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAdminRoute: ProtectedAdminRouteWithChildren,
  ProtectedUserCreateReimbursementLazyRoute:
    ProtectedUserCreateReimbursementLazyRoute,
  ProtectedUserEditReimbursementLazyRoute:
    ProtectedUserEditReimbursementLazyRoute,
  ProtectedUserReimbursementListLazyRoute:
    ProtectedUserReimbursementListLazyRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof ProtectedAdminRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/auth/login': typeof AuthAuthLoginLazyRoute
  '/auth/register': typeof AuthAuthRegisterLazyRoute
  '/user/create-reimbursement': typeof ProtectedUserCreateReimbursementLazyRoute
  '/user/edit-reimbursement': typeof ProtectedUserEditReimbursementLazyRoute
  '/user/reimbursement-list': typeof ProtectedUserReimbursementListLazyRoute
  '/admin/reimbursement-list': typeof ProtectedAdminAdminReimbursementListLazyRouteWithChildren
  '/admin/users-list': typeof ProtectedAdminAdminUsersListLazyRoute
  '/admin/reimbursement-list/resolved': typeof ProtectedAdminAdminReimbursementListResolvedLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof ProtectedAdminRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/auth/login': typeof AuthAuthLoginLazyRoute
  '/auth/register': typeof AuthAuthRegisterLazyRoute
  '/user/create-reimbursement': typeof ProtectedUserCreateReimbursementLazyRoute
  '/user/edit-reimbursement': typeof ProtectedUserEditReimbursementLazyRoute
  '/user/reimbursement-list': typeof ProtectedUserReimbursementListLazyRoute
  '/admin/reimbursement-list': typeof ProtectedAdminAdminReimbursementListLazyRouteWithChildren
  '/admin/users-list': typeof ProtectedAdminAdminUsersListLazyRoute
  '/admin/reimbursement-list/resolved': typeof ProtectedAdminAdminReimbursementListResolvedLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/_protected/_admin': typeof ProtectedAdminRouteWithChildren
  '/_auth/auth/login': typeof AuthAuthLoginLazyRoute
  '/_auth/auth/register': typeof AuthAuthRegisterLazyRoute
  '/_protected/user/create-reimbursement': typeof ProtectedUserCreateReimbursementLazyRoute
  '/_protected/user/edit-reimbursement': typeof ProtectedUserEditReimbursementLazyRoute
  '/_protected/user/reimbursement-list': typeof ProtectedUserReimbursementListLazyRoute
  '/_protected/_admin/admin/reimbursement-list': typeof ProtectedAdminAdminReimbursementListLazyRouteWithChildren
  '/_protected/_admin/admin/users-list': typeof ProtectedAdminAdminUsersListLazyRoute
  '/_protected/_admin/admin/reimbursement-list/resolved': typeof ProtectedAdminAdminReimbursementListResolvedLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/auth/login'
    | '/auth/register'
    | '/user/create-reimbursement'
    | '/user/edit-reimbursement'
    | '/user/reimbursement-list'
    | '/admin/reimbursement-list'
    | '/admin/users-list'
    | '/admin/reimbursement-list/resolved'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/auth/login'
    | '/auth/register'
    | '/user/create-reimbursement'
    | '/user/edit-reimbursement'
    | '/user/reimbursement-list'
    | '/admin/reimbursement-list'
    | '/admin/users-list'
    | '/admin/reimbursement-list/resolved'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_protected'
    | '/about'
    | '/_protected/_admin'
    | '/_auth/auth/login'
    | '/_auth/auth/register'
    | '/_protected/user/create-reimbursement'
    | '/_protected/user/edit-reimbursement'
    | '/_protected/user/reimbursement-list'
    | '/_protected/_admin/admin/reimbursement-list'
    | '/_protected/_admin/admin/users-list'
    | '/_protected/_admin/admin/reimbursement-list/resolved'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
  AboutLazyRoute: typeof AboutLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRoute: AuthRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
  AboutLazyRoute: AboutLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_protected",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth/login",
        "/_auth/auth/register"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/_admin",
        "/_protected/user/create-reimbursement",
        "/_protected/user/edit-reimbursement",
        "/_protected/user/reimbursement-list"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/_protected/_admin": {
      "filePath": "_protected/_admin.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/_admin/admin/reimbursement-list",
        "/_protected/_admin/admin/users-list"
      ]
    },
    "/_auth/auth/login": {
      "filePath": "_auth/auth/login.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/auth/register": {
      "filePath": "_auth/auth/register.lazy.tsx",
      "parent": "/_auth"
    },
    "/_protected/user/create-reimbursement": {
      "filePath": "_protected/user/create-reimbursement.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/user/edit-reimbursement": {
      "filePath": "_protected/user/edit-reimbursement.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/user/reimbursement-list": {
      "filePath": "_protected/user/reimbursement-list.lazy.tsx",
      "parent": "/_protected"
    },
    "/_protected/_admin/admin/reimbursement-list": {
      "filePath": "_protected/_admin/admin/reimbursement-list.lazy.tsx",
      "parent": "/_protected/_admin",
      "children": [
        "/_protected/_admin/admin/reimbursement-list/resolved"
      ]
    },
    "/_protected/_admin/admin/users-list": {
      "filePath": "_protected/_admin/admin/users-list.lazy.tsx",
      "parent": "/_protected/_admin"
    },
    "/_protected/_admin/admin/reimbursement-list/resolved": {
      "filePath": "_protected/_admin/admin/reimbursement-list/resolved.lazy.tsx",
      "parent": "/_protected/_admin/admin/reimbursement-list"
    }
  }
}
ROUTE_MANIFEST_END */
